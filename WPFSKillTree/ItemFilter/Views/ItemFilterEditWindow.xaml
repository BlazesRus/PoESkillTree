<controls:MetroWindow
    x:Class="PoESkillTree.ItemFilter.Views.ItemFilterEditWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:ctl="clr-namespace:PoESkillTree.Controls"
    xmlns:l="clr-namespace:PoESkillTree.Localization.XAML"
    xmlns:utl="clr-namespace:PoESkillTree.Utils.Converter"
    Icon="/PoESkillTree;component/logo.ico"
    Width="500"
    WindowStartupLocation="CenterOwner" WindowStyle="ToolWindow"
    ShowInTaskbar="False" ResizeMode="NoResize" SizeToContent="Height">
    <controls:MetroWindow.Title>
        <l:Catalog Message="Item Filter"/>
    </controls:MetroWindow.Title>
    <Window.Resources>
        <ResourceDictionary>
            <utl:StringBrushConverter x:Key="BrushConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanVisibilityConverter"/>

            <VisualBrush x:Key="IconInfoBrush" Stretch="Uniform" AlignmentX="Center" AlignmentY="Center">
                <VisualBrush.Visual>
                    <Canvas Width="15" Height="15" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                        <Path Width="8.3333" Height="14.3333" Canvas.Left="3.8333" Canvas.Top="0.8333" Stretch="Fill" Fill="{DynamicResource BlackColorBrush}" 
                              Data="F1 M 37.2083,49.0833C 39.3945,49.0833 41.1667,50.8555 41.1667,53.0417C 41.1667,55.2278 39.3945,57 37.2083,57C 35.0222,57 33.25,55.2278 33.25,53.0417C 33.25,50.8555 35.0222,49.0833 37.2083,49.0833 Z M 38,17.4167C 44.9956,17.4167 50.6666,21.9416 50.6666,28.5C 50.6666,30.875 49.0833,34.8333 45.9167,36.4167C 42.75,38 41.1667,40.1267 41.1667,42.75L 41.1667,45.9167L 33.25,45.9167L 33.25,43.5417C 33.25,38.1571 38,34.8333 39.5833,33.25C 42.75,30.0833 42.75,29.644 42.75,28.5C 42.75,25.8767 40.6233,23.75 38,23.75C 35.3766,23.75 33.25,25.8767 33.25,28.5L 33.25,30.875L 25.3333,30.875L 25.3333,29.2917C 25.3333,22.7333 31.0044,17.4167 38,17.4167 Z "/>
                    </Canvas>
                </VisualBrush.Visual>
                <VisualBrush.RelativeTransform>
                    <ScaleTransform ScaleX="0.6" ScaleY="0.6" CenterX="0.5" CenterY="0.5"/>
                </VisualBrush.RelativeTransform>
            </VisualBrush>

            <Style x:Key="RuleDescriptionButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Ellipse x:Name="Ellipse" Width="14" Height="14" Stroke="{DynamicResource CheckBoxBrush}" Fill="{StaticResource IconInfoBrush}"
                                     SnapsToDevicePixels="True"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsMouseOver" Value="True">
                                    <Setter TargetName="Ellipse" Property="Stroke" Value="{DynamicResource BlackBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RuleGroupContainerStyle" TargetType="{x:Type GroupItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Expander IsExpanded="{Binding Items[0].Group.IsExpanded}">
                                <Expander.Header>
                                    <DockPanel>
                                        <ctl:ColorPickerButton TextColor="{Binding Items[0].Group.TextColor, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                                               BackgroundColor="{Binding Items[0].Group.BackgroundColor, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                                               BorderColor="{Binding Items[0].Group.BorderColor, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                                               Margin="0,0,5,0" DockPanel.Dock="Right"/>
                                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                                    </DockPanel>
                                </Expander.Header>
                                <ItemsPresenter />
                            </Expander>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <CollectionViewSource x:Key="RuleCollectionView" Source="{Binding Filter.Rules}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="GroupName"/>
                </CollectionViewSource.GroupDescriptions>
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="GroupIndex"/>
                    <scm:SortDescription PropertyName="Index"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Margin="2">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TextBlock Margin="10,10,10,0" TextWrapping="Wrap" VerticalAlignment="Top">
            <Run>
                <l:Catalog Message="Check or uncheck rules to either show or hide specific types of items."/>
            </Run>
            <LineBreak/>
            <Run>
                <l:Catalog Message="Choose colors of item labels shown for each rule or group of rules."/>
            </Run>
        </TextBlock>
        <ListBox Margin="10,10,10,0" Grid.Row="1" ScrollViewer.CanContentScroll="False" ScrollViewer.VerticalScrollBarVisibility="Visible" MaxHeight="377"
                 ItemsSource="{Binding Source={StaticResource RuleCollectionView}}">
            <ListBox.GroupStyle>
                <GroupStyle ContainerStyle="{StaticResource RuleGroupContainerStyle}"/>
            </ListBox.GroupStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel>
                        <ctl:ColorPickerButton TextColor="{Binding TextColor, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                                               BackgroundColor="{Binding BackgroundColor, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                                               BorderColor="{Binding BorderColor, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                                               Margin="0,0,5,0" DockPanel.Dock="Right"/>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding IsChecked}" IsEnabled="{Binding IsEnabled}">
                                <TextBlock Text="{Binding Name}"/>
                            </CheckBox>
                            <Button Click="Description_Click" Tag="{Binding Description}"
                                    Style="{StaticResource RuleDescriptionButtonStyle}"
                                    Visibility="{Binding HasDescription, Converter={StaticResource BooleanVisibilityConverter}}"
                                    Margin="10,0,0,0"/>
                        </StackPanel>
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,10,10,10" Grid.Row="2">
            <Button VerticalAlignment="Top" Click="Save_Click">
                <Button.Content>
                    <l:Catalog Message="Save"/>
                </Button.Content>
            </Button>
            <Button VerticalAlignment="Top" Click="Cancel_Click" Margin="10,0,0,0">
                <Button.Content>
                    <l:Catalog Message="Cancel"/>
                </Button.Content>
            </Button>
        </StackPanel>
    </Grid>
</controls:MetroWindow>
