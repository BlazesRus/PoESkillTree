<UserControl x:Class="PoESkillTree.Views.Builds.BuildsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:l="clr-namespace:PoESkillTree.Localization.XAML"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:wpf="clr-namespace:PoESkillTree.Utils.Wpf"
             xmlns:converter="clr-namespace:PoESkillTree.Utils.Converter"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:viewModels="clr-namespace:PoESkillTree.ViewModels.Builds"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:controls1="clr-namespace:PoESkillTree.Controls"
             xmlns:dialogs="clr-namespace:PoESkillTree.Controls.Dialogs"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModels:BuildsControlViewModel}"
             x:Name="Control"
             dialogs:DialogParticipation.Register="{Binding}">
    <UserControl.Resources>
        <viewModels:BuildsViewModelProxy x:Key="VmProxy" Data="{Binding}" />
        <converter:BooleanToStringConverter x:Key="DirtyBooleanConverter" TrueString="*" FalseString="" />
        <converter:EmptyStringConverter x:Key="NoteStringConverter">
            <converter:EmptyStringConverter.EmptyStringRepresentation>
                <l:Catalog Message="Right click to edit"/>
            </converter:EmptyStringConverter.EmptyStringRepresentation>
        </converter:EmptyStringConverter>

        <DataTemplate x:Key="DropDownItemTemplate" DataType="viewModels:ClassFilterItem">
            <TextBlock>
                <TextBlock.Style>
                    <!-- This style imitates group headers when AscendancyClass == null.
                                     Actual groupings are not used as their headers can not be selected. -->
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding AscendancyClass}" />
                        <Setter Property="Margin" Value="10 0 0 0" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Sizes.Font.DialogMessage}" />
                        <Style.Triggers>
                            <!-- AscendancyClass == null -->
                            <DataTrigger Binding="{Binding AscendancyClass}" Value="{x:Null}">
                                <Setter Property="Text" Value="{Binding CharacterClass}" />
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="SelectedItemTemplate" DataType="viewModels:ClassFilterItem">
            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding AscendancyClass}" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
                        <Style.Triggers>
                            <!-- AscendancyClass == null -->
                            <DataTrigger Binding="{Binding AscendancyClass}" Value="{x:Null}">
                                <Setter Property="Text" Value="{Binding CharacterClass}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </DataTemplate>
    </UserControl.Resources>
    <Grid Width="300"
          Background="{DynamicResource MahApps.Brushes.WhiteColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0">
            <controls1:SearchableComboBox Width="110" Margin="1 0 2 0"
                                          SelectedItem="{Binding ClassFilter}"
                                          SelectedIndex="0"
                                          ItemsSource="{Binding ClassFilterItems}"
                                          ItemTemplateSelector="{wpf:ComboBoxTemplateSelector
                                            DropdownItemsTemplate={StaticResource DropDownItemTemplate},
                                            SelectedItemTemplate={StaticResource SelectedItemTemplate}}" />
            <TextBox VerticalContentAlignment="Center"
                     controls:TextBoxHelper.ClearTextButton="True"
                     controls:TextBoxHelper.SelectAllOnFocus="True"
                     Text="{Binding TextFilter, UpdateSourceTrigger=PropertyChanged}">
                <controls:TextBoxHelper.Watermark><l:Catalog>Filter</l:Catalog></controls:TextBoxHelper.Watermark>
            </TextBox>
        </DockPanel>

        <TreeView ItemsSource="{Binding BuildRoot.Children}"
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True"
                  dd:DragDrop.DropHandler="{Binding DropHandler}"
                  Grid.Row="1"
                  x:Name="TreeView">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type viewModels:BuildFolderViewModel}"
                                          ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal" Height="16">
                        <iconPacks:PackIconModern Height="16" Width="16" Margin="0 0 4 0">
                            <iconPacks:PackIconModern.Style>
                                <Style TargetType="iconPacks:PackIconModern">
                                    <Setter Property="Kind" Value="Folder" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Build.IsExpanded}" Value="True">
                                            <Setter Property="Kind" Value="FolderOpen" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </iconPacks:PackIconModern.Style>
                        </iconPacks:PackIconModern>
                        <TextBlock Text="{Binding Build.Name}"
                                   FontWeight="Bold"
                                   VerticalAlignment="Center"/>
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding Data.EditCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}"
                                          InputGestureText="F2">
                                    <MenuItem.Header>
                                        <l:Catalog Message="Edit" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding Data.DeleteCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}"
                                          InputGestureText="Delete">
                                    <MenuItem.Header>
                                        <l:Catalog Message="Delete" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem Command="{Binding Data.CutCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}"
                                          InputGestureText="Ctrl+X">
                                    <MenuItem.Header>
                                        <l:Catalog Message="Cut" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding Data.PasteCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}"
                                          InputGestureText="Ctrl+V">
                                    <MenuItem.Header>
                                        <l:Catalog Message="Paste" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem Command="{Binding Data.NewBuildCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}">
                                    <MenuItem.Header>
                                        <l:Catalog Message="New Build" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding Data.NewFolderCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}">
                                    <MenuItem.Header>
                                        <l:Catalog Message="New Folder" />
                                    </MenuItem.Header>
                                </MenuItem>
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type viewModels:BuildViewModel}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <Border Width="40" Height="38"
                                Grid.Column="0">
                            <Image Source="{Binding Image}" Stretch="Uniform"/>
                        </Border>
                        <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="10,0,0,0">
                            <TextBlock FontWeight="Bold" FontSize="12" TextWrapping="NoWrap">
                                <Run Text="{Binding Build.Name}" /><Run Text="{Binding Build.IsDirty, Converter={StaticResource DirtyBooleanConverter}, Mode=OneWay}" />
                            </TextBlock>
                            <TextBlock Text="{Binding Description}" MaxHeight="60"/>
                        </StackPanel>
                        
                        <Grid.ToolTip>
                            <TextBlock Text="{Binding Build.Note, Converter={StaticResource NoteStringConverter}}" />
                        </Grid.ToolTip>

                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding Data.OpenBuildCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}"
                                          InputGestureText="Enter">
                                    <MenuItem.Header>
                                        <l:Catalog Message="Open" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding Data.EditCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}"
                                          InputGestureText="F2">
                                    <MenuItem.Header>
                                        <l:Catalog Message="Edit" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding Data.DeleteCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}"
                                          InputGestureText="Delete">
                                    <MenuItem.Header>
                                        <l:Catalog Message="Delete" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem Command="{Binding Data.CutCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}"
                                          InputGestureText="Ctrl+X">
                                    <MenuItem.Header>
                                        <l:Catalog Message="Cut" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding Data.CopyCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}"
                                          InputGestureText="Ctrl+C">
                                    <MenuItem.Header>
                                        <l:Catalog Message="Copy" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem Command="{Binding Data.SaveBuildCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}">
                                    <MenuItem.Header>
                                        <l:Catalog Message="Save" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding Data.RevertBuildCommand, Source={StaticResource VmProxy}}"
                                          CommandParameter="{Binding}">
                                    <MenuItem.Header>
                                        <l:Catalog Message="Discard changes" />
                                    </MenuItem.Header>
                                    <MenuItem.ToolTip>
                                        <l:Catalog Message="Discards all changes made to this build after the last save"></l:Catalog>
                                    </MenuItem.ToolTip>
                                </MenuItem>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        
                        <Grid.InputBindings>
                            <MouseBinding MouseAction="LeftDoubleClick"
                                          Command="{Binding DataContext.OpenBuildCommand, ElementName=Control}"
                                          CommandParameter="{Binding}" />
                        </Grid.InputBindings>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding CurrentlyOpen}" Value="True">
                            <Setter Property="Background" TargetName="Grid" Value="{DynamicResource AccentColorBrush4}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </TreeView.Resources>
            
            <TreeView.ItemContainerStyleSelector>
                <wpf:StyleSelectorByType Type="{x:Type viewModels:BuildFolderViewModel}">
                    <wpf:StyleSelectorByType.Style>
                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                            <d:Style.DataContext>
                                <x:Type Type="viewModels:BuildFolderViewModel" />
                            </d:Style.DataContext>
                            <Setter Property="IsExpanded" Value="{Binding Build.IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                    </wpf:StyleSelectorByType.Style>
                    <wpf:StyleSelectorByType.DefaultStyle>
                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                            <d:Style.DataContext>
                                <x:Type Type="viewModels:BuildViewModel" />
                            </d:Style.DataContext>
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                    </wpf:StyleSelectorByType.DefaultStyle>
                </wpf:StyleSelectorByType>
            </TreeView.ItemContainerStyleSelector>

            <TreeView.InputBindings>
                <KeyBinding Key="Enter"
                            Command="{Binding OpenBuildCommand}"
                            CommandParameter="{Binding SelectedBuild}"/>
                <KeyBinding Key="F2"
                            Command="{Binding EditCommand}"
                            CommandParameter="{Binding SelectedBuild}"/>
                <KeyBinding Key="Delete"
                            Command="{Binding DeleteCommand}"
                            CommandParameter="{Binding SelectedBuild}"/>
                <KeyBinding Gesture="Ctrl+Up"
                            Command="{Binding MoveUpCommand}"
                            CommandParameter="{Binding SelectedBuild}"/>
                <KeyBinding Gesture="Ctrl+Down"
                            Command="{Binding MoveDownCommand}"
                            CommandParameter="{Binding SelectedBuild}"/>
                <KeyBinding Gesture="Ctrl+C"
                            Command="{Binding CopyCommand}"
                            CommandParameter="{Binding SelectedBuild}" />
                <KeyBinding Gesture="Ctrl+X"
                            Command="{Binding CutCommand}"
                            CommandParameter="{Binding SelectedBuild}" />
                <KeyBinding Gesture="Ctrl+V"
                            Command="{Binding PasteCommand}"
                            CommandParameter="{Binding SelectedBuild}" />
            </TreeView.InputBindings>
            
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <wpf:Setter Property="{Binding SelectedBuild}" Value="{Binding SelectedItem, ElementName=TreeView}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TreeView>
    </Grid>
</UserControl>